<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Dashboard</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            color: #333;
        }
        .container {
            max-width: 90%;
            margin: 0 auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            height: 100%;
            box-sizing: border-box;
            position: relative; /* Needed for stacking context */
        }
        .container {
            margin-top: 50px;
        }

        .room {
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 10px;
            margin-bottom: 20px;
        }

        .room h2 {
            margin-top: 0;
        }
        h1 {
            text-align: center;
            color: crimson;
        }
        h2{
            text-align: center;
            color: #333;
        }
        .navbar {
            background-color: #333;
            padding: 10px 20px;
            border-radius: 0px;
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: relative; /* Needed for stacking context */
        }
        .navbar ul {
            list-style-type: none;
            margin: 0;
            padding: 0;
            text-align: center;
            display: flex;
            align-items: center;
        }
        .navbar ul li {
            display: inline;
            margin-right: 20px;
        }
        .navbar ul li a {
            color: #fff;
            text-decoration: none;
            font-size: 16px;
            transition: color 0.3s ease;
            padding: 8px 12px;
            border-radius: 5px;
        }
        .navbar ul li a:hover {
            background-color: rgba(255, 255, 255, 0.2);
        }
        .profile-icon {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            right: 20px;
            z-index: 2; /* Ensure profile icon is above cards */
            color: #fff; /* Change the color here */
        }

        .profile-info .edit-profile {
            color: #fff;
            text-decoration: none;
            font-size: 16px;
            transition: color 0.3s ease;
            display: block;
            margin-top: 10px; /* Increased margin for better spacing */
        }

        .profile-info .edit-profile:hover {
            color: #f0f0f0;
        }

        /* Hide the edit profile form initially */
        .edit-profile-form.hidden {
            display: none;
        }

        /* Hide the profile info initially */
        #profile-info.hidden {
            display: none;
        }

        /* Hide the edit profile form initially */
        .edit-profile-form {
            display: none;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        /* Style the edit profile form */
        .edit-profile-form form {
            max-width: 300px;
            margin: 0 auto;
            text-align: center;
        }

        .edit-profile-form input {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .edit-profile-form button {
            width: 100%;
            padding: 10px;
            background-color: #333;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .edit-profile-form button:hover {
            background-color: #555;
        }

        /* Make the profile info visible */
        .profile-info.active {
            opacity: 1;
            transition: opacity 0.3s ease;
        }

        .profile-icon .profile-toggle {
            color: #fff;
            text-decoration: none;
            font-size: 18px;
            transition: transform 0.3s ease;
        }

        .profile-icon .profile-toggle:hover {
            transform: scale(1.1);
        }

        .profile-info {
            display: none;
            position: absolute;
            top: calc(100% + 10px);
            right: 0;
            background-color: #333;
            padding: 10px;
            border-radius: 5px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
            z-index: 2;
            transition: opacity 0.3s ease;
            opacity: 0;
        }

        .profile-info.active {
            display: block;
            opacity: 1;
        }

        .profile-info p {
            color: #fff;
            margin: 5px 0;
        }

        .profile-info a {
            color: #fff;
            text-decoration: none;
            font-size: 16px;
            transition: color 0.3s ease;
            display: block;
            margin-top: 5px;
        }

        .profile-info a:hover {
            color: #f0f0f0;
        }

        .card {
            background-color: #f9f9f9;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
            position: relative;
            z-index: 1; /* Ensure cards are behind profile info */
        }

        .room-card {
            background-color: #f9f9f9;
            border: 1px solid #ddd;
            padding: 20px;
            margin: 20px;
            width: 300px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            transition: box-shadow 0.3s ease;
        }

        .room-card:hover {
            box-shadow: 0 8px 16px rgba(0,0,0,0.2);
        }

        .room-card img {
            width: 100%;
            border-radius: 5px;
            margin-bottom: 10px;
        }

        .room-card h3 {
            margin-top: 0;
            font-size: 20px;
            text-align: center;
            color: #333;
        }

        .room-card p {
            margin-bottom: 10px;
            color: #555;
        }

        form {
            text-align: center;
        }

        input[type="text"], input[type="number"], select {
            width: calc(100% - 20px);
            padding: 10px;
            margin: 10px 0;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
        }

        input[type="submit"], .button {
            display: inline-block;
            padding: 10px 20px;
            background-color: #333;
            color: #fff;
            text-decoration: none;
            border-radius: 5px;
            transition: background-color 0.3s ease;
            cursor: pointer;
            border: none;
        }

        input[type="submit"]:hover, .button:hover {
            background-color: #555;
        }

        .search-container {
            margin: 20px auto;
            max-width: 400px;
            padding: 10px;
            border-radius: 5px;
            background-color: #fff;
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
        }

        .search-container input[type="text"] {
            width: calc(100% - 100px);
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .search-container input[type="submit"] {
            width: 100px;
            padding: 10px;
            background-color: #333;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .search-container input[type="submit"]:hover {
            background-color: #555;
        }
    </style>
</head>
<body>
    <div class="navbar">
        <ul>
            <li><a href="index.html">Home</a></li>
            <li><a href="#">Saved Rooms</a></li>
            <li><a href="index.html">Logout</a></li>
        </ul>
        <div class="profile-icon">
            <a href="#" class="profile-toggle">&#x1F464;</a>
            <div class="profile-info" id="profile-info">
                <p><strong>Name:</strong> John Doe</p>
                <p><strong>Email:</strong> john.doe@example.com</p>
                <p><strong>University:</strong> Example University</p>
                <p><strong>Year:</strong> 3rd Year</p>
                <button class="edit-profile-button">Edit Profile</button> <!-- Added Edit Profile button -->
                <div class="edit-profile-form" style="display: none;">
                    <form id="edit-profile-form" action="#" method="post">
                        <input type="text" id="edit-name" name="name" placeholder="Enter your name">
                        <input type="email" id="edit-email" name="email" placeholder="Enter your email">
                        <input type="text" id="edit-university" name="university" placeholder="Enter your university">
                        <input type="text" id="edit-year" name="year" placeholder="Enter your year">
                        <button type="submit">Save</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="container">
        <h1>Welcome To Student Dashboard</h1>
        <div class="card search-container">
            <h2>Search for Rental Rooms</h2>
            <form action="/search" method="GET">
                <input type="text" id="location" name="location" placeholder="Location (e.g., City or ZIP code)">
                <input type="submit" value="Search">
            </form>
        </div>
        <div class="container">
            <h1>Available Rooms</h1>
            <div class="row">           
                {{#each rooms}}
                <div class="col-md-4">
                    <div class="room-card">
                        <img src="{{ imageUrl }}" alt="Room Image">
                        <h3>{{location}}</h3>
                        <p><strong>Price: </strong> ${{price}}</p>
                        <p><strong>Description: </strong>{{description}}</p>
                        <a href="/room_details/{{_id}}" class="more-details-button">More Details</a> <!-- Link to room_details.html -->
                        <!-- Add more room details here if needed -->
                    </div>
                </div>
                {{/each}}
            </div>
            <div id="all-rooms-container"></div>
            <!-- Add this button to your existing HTML template -->
            <a href="#" id="view-all-rooms-button" class="button">View All Rooms</a>
        </div>
        <!-- Add a hidden input field to store the searched text -->
<input type="hidden" id="searched-text-input" value="{{searchedText}}">
    </div>

    <!-- More Details Modal -->
    <div id="moreDetailsModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <!-- More details content here -->
        </div>
    </div>

    <!-- Location Search Map -->
    <div id="map"></div>

    <!-- Chatbox -->
    <div id="chatbox">
        <!-- Chatbox content here -->
    </div>

    <script>
        document.querySelector('.profile-icon').addEventListener('click', function() {
            document.getElementById('profile-info').classList.toggle('active');
        });

        // JavaScript to toggle the visibility of profile info and edit profile form
        document.querySelector('.edit-profile-button').addEventListener('click', function() {
            // Toggle visibility of profile info and edit profile form
            document.getElementById('profile-info').classList.toggle('hidden');
            document.querySelector('.edit-profile-form').classList.toggle('hidden');
        });

        // Prevent form submission (for demonstration purposes)
        document.getElementById('edit-profile-form').addEventListener('submit', function(event) {
            event.preventDefault();
            // In a real scenario, you would handle form submission here
        });

        // JavaScript code to handle "View All Rooms" button click event
        document.getElementById('view-all-rooms-button').addEventListener('click', async () => {
            try {
                // Fetch all rooms from the backend
                const response = await fetch('/all-rooms');
                const rooms = await response.json();

                // Render the rooms in the UI
                renderAllRooms(rooms);
            } catch (error) {
                console.error("Error fetching all rooms:", error);
                // Handle error (e.g., display an error message)
            }
        });
function getImageUrl(image) {
    return `/uploads/${image}`;
}
        // Function to render all rooms in the UI
        function renderAllRooms(rooms) {
            const allRoomsContainer = document.getElementById('all-rooms-container');

            // Clear existing content in the container
            allRoomsContainer.innerHTML = '';

            // Loop through each room and create HTML elements to display them
            rooms.forEach(room => {
                // Create room card
                const roomCard = document.createElement('div');
                roomCard.classList.add('room-card');

                // Create image element
                const roomImage = document.createElement('img');
                roomImage.src = `/public/uploads/${room.imageUrl}`;
                roomImage.alt = `${room.location} Image`;
                roomImage.classList.add('room-image');
                roomCard.appendChild(roomImage);

                // Create title element
                const roomTitle = document.createElement('h3');
                roomTitle.textContent = room.location;
                roomCard.appendChild(roomTitle);

                // Create price element
                const roomPrice = document.createElement('p');
                roomPrice.innerHTML = `<strong>Price:</strong> $${room.price}`;
                roomCard.appendChild(roomPrice);

                // Create description element
                const roomDescription = document.createElement('p');
                roomDescription.innerHTML = `<strong>Description:</strong> ${room.description}`;
                roomCard.appendChild(roomDescription);

                // Append room card to container
                allRoomsContainer.appendChild(roomCard);
            });
        }
        // Updated JavaScript code
// Function to initialize the page and display search results
function initPage() {
    // Get the searched text from the hidden input field
    const searchedText = document.getElementById('searched-text-input').value;

    // Display the searched text in the search results section
    document.getElementById('searched-text').textContent = searchedText;
}

// Call the initPage function when the page loads
document.addEventListener('DOMContentLoaded', initPage);


    </script>
</body>
</html>
